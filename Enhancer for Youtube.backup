{
  "version": "3.0.6",
  "settings": {
    "applyvideofilters": false,
    "backdropcolor": "#000000",
    "backdropopacity": 85,
    "blackbars": false,
    "blockautoplay": false,
    "blockhfrformats": false,
    "blockwebmformats": false,
    "boostvolume": false,
    "cinemamode": false,
    "cinemamodewideplayer": false,
    "controlbar": {
      "active": false,
      "autohide": false,
      "centered": true,
      "position": "fixed"
    },
    "controls": [],
    "controlsvisible": true,
    "controlspeed": false,
    "controlspeedmousebutton": false,
    "controlvolume": false,
    "controlvolumemousebutton": false,
    "convertshorts": false,
    "customcolors": {
      "--dimmer-text": "#cccccc",
      "--hover-background": "#232323",
      "--main-background": "#111111",
      "--main-color": "#00adee",
      "--main-text": "#eff0f1",
      "--second-background": "#181818",
      "--shadow": "#000000"
    },
    "customcss": "",
    "customscript": "// Variable Declarations\nvar styleElement = document.createElement('style');\nlet buttonPosition;\nlet position;\nvar viewportWidth = window.innerWidth;\nlet observer = null;\nlet isClicked = true;\nlet lastUrl = null;\nlet toggleButton = null;\nlet isSkippingEnabled = true;\nlet isRestartScheduled = false;\nlet hasNavigationButtonBeenFetched = false;\n\nconst scrollToTopBtn = document.createElement('button');\nconst svgElement = document.createElementNS(\n  'http://www.w3.org/2000/svg',\n  'svg'\n);\nconst pathElement = document.createElementNS(\n  'http://www.w3.org/2000/svg',\n  'path'\n);\nconst divElement = document.createElement('div');\nconst scrollTopBtnStyles = document.createElement('style');\n\n// Conditional Logic for Button Position\nif (window.screen.width === 2560 && window.screen.height === 1440) {\n  buttonPosition = viewportWidth * 0.73;\n} else {\n  buttonPosition = viewportWidth * 0.7 - 30;\n}\n\n// DOM Manipulations\nscrollToTopBtn.id = 'scroll-to-top';\nscrollToTopBtn.classList.add('scroll-top-btn');\nscrollToTopBtn.setAttribute('aria-label', 'Scroll to Top');\n\nsvgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\nsvgElement.setAttribute('height', '24');\nsvgElement.setAttribute('viewBox', '0 0 24 24');\nsvgElement.setAttribute('width', '24');\nsvgElement.setAttribute('focusable', 'false');\nsvgElement.style.fill = 'red';\nsvgElement.style.display = 'flex';\n\npathElement.setAttribute(\n  'd',\n  'M19.884 10.114a1.25 1.25 0 01-1.768 1.768L13.25 7.016v12.982a1.25 1.25 0 11-2.5 0V7.016l-4.866 4.866a1.25 1.25 0 11-1.768-1.768L12 2.23l7.884 7.884Z'\n);\n\nsvgElement.appendChild(pathElement);\n\ndivElement.classList.add('scroll-up-btn');\ndivElement.appendChild(svgElement);\n\nscrollToTopBtn.appendChild(divElement);\n\nscrollTopBtnStyles.textContent = `\n  :root {\n    --dark-bg: rgba(100,100,100, 0.5); /* 50% dark circle for light theme */\n    --dark-bg-hover: rgba(150, 150, 150, 0.5); /* 80% dark circle for light theme hover */\n    --light-bg: rgba(200, 200, 200, 0.5); /* 50% light circle for dark theme */\n    --light-bg-hover: rgba(150, 150, 150, 0.5); /* 80% light circle for dark theme hover */\n  }\n\n  /* Light theme */\n  .scroll-top-btn {\n    position: fixed;\n    opacity: 0;\n    bottom: 20px;\n    left: ${buttonPosition}px;\n    width: 55px;\n    height: 55px;\n    border: 1px solid red;\n    padding: 0;\n    border-radius: 50%;\n    background-color: var(--light-bg);\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n  }\n  .scroll-top-btn:hover {\n    background-color: var(--light-bg-hover);\n  }\n  /* Dark theme */\n  @media (prefers-color-scheme: dark) {\n    .scroll-top-btn {\n      background-color: var(--dark-bg);\n    }\n    .scroll-top-btn:hover {\n      background-color: var(--dark-bg-hover);\n    }\n  }\n  .scroll-up-btn {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\ndocument.head.appendChild(styleElement);\ndocument.head.appendChild(scrollTopBtnStyles);\ndocument.body.appendChild(scrollToTopBtn);\n\n// Large Functions\nfunction updatePlayerPosition() {\n  var primaryElement = document.querySelector('#primary');\n  var columnsElement = document.querySelector('#columns');\n  var viewportWidth = window.innerWidth;\n\n  if (columnsElement && primaryElement) {\n    var maxWidthValue;\n    if (window.screen.width === 2560 && window.screen.height === 1440) {\n      maxWidthValue = 2300;\n      if (window.pageYOffset >= 4200) {\n        position = viewportWidth * 0.75 + 20;\n      } else {\n        position = viewportWidth * 0.55 - 30;\n      }\n    } else if (window.screen.width === 1920 && window.screen.height === 1080) {\n      maxWidthValue = 1850;\n      position = viewportWidth * 0.45 - 30;\n    } else {\n      maxWidthValue = 1850;\n    }\n  }\n\n  var cssRules = `\n    :root {\n      --dark-fl: brightness(0.6) !important;\n      --dark-fl-hover: brightness(0.6) !important;\n      --light-fl: brightness(0.8) !important;\n      --light-fl-hover: brightness(0.6) !important;\n      --dark-bt: rgba(65, 65, 65, 0.5);\n      --dark-bt-hover: rgba(150, 150, 150, 1);\n      --light-bt: rgba(242, 242, 242);\n      --light-bt-hover: rgba(217,217,217);\n    } \n    #start.ytd-masthead {\n      height: 50px !important;\n      border-radius: 30px !important;\n      display: flex !important;\n      position: static !important;\n      margin: 0 10% !important;\n      border: 1px solid red !important;\n      backdrop-filter: var(--light-fl) !important;\n    }\n    .ytSearchboxComponentHost {\n      height: 53px !important;\n      margin: 0 12px 0 0 !important;\n    }\n    .ytSearchboxComponentInputBox {\n      margin-left: 0 !important;\n      margin-top: 0 !important;\n      border: 1px solid red !important;\n      box-shadow: none !important;\n      height: 50px !important;\n      background: transparent !important;\n      backdrop-filter: var(--light-fl) !important;\n      display: flex !important;\n      justify-content: space-around !important;\n    }\n    #center.ytd-masthead {\n      margin: auto !important;\n    }\n    #container.ytd-searchbox {\n      margin-left: 0 !important;\n      border: 1px solid red !important;\n      box-shadow: none !important;\n      background: transparent !important;\n      backdrop-filter: var(--light-fl) !important;\n      display: flex !important;\n      justify-content: space-around !important;\n    }\n    #end.ytd-masthead {\n      height: 50px !important;\n      min-width: 10px !important;\n      border-radius: 30px !important;\n      position: relative !important;\n      margin: 0 10% !important;\n      border: 1px solid red !important;\n      backdrop-filter: var(--light-fl) !important;\n    } \n    #primary.ytd-watch-flexy { \n      max-width: ${maxWidthValue}px !important;\n      margin-left: 0px !important;\n      margin-top: 12px !important;\n    }\n    #columns.ytd-watch-flexy {\n     max-width: ${maxWidthValue}px !important;\n    }\n    ytd-watch-flexy[flexy] #secondary.ytd-watch-flexy {\n      min-width: 450px !important;\n      padding-right: 0px !important;\n    }\n    .ytSearchboxComponentSearchButton {\n      background: transparent !important;\n      border: 1px solid red !important;\n      backdrop-filter: var(--light-fl) !important;\n      height: 52px !important;\n    }\n    .yt-spec-button-shape-next--overlay.yt-spec-button-shape-next--text {\n      backdrop-filter: var(--light-fl) !important;\n      color: white !important;\n    }\n    #background.ytd-masthead {\n      position: fixed !important;\n      opacity: 0 !important;\n      visibility: visible !important;\n      --light-theme-text-color: invert !important;\n    }\n    #search-form.ytd-searchbox {\n      height: 50px !important;\n    }\n    ytd-searchbox.ytd-masthead {\n      margin: 0 !important;\n      padding: 0 10px !important;\n    }\n    #sections.ytd-guide-renderer {\n      position: relative !important;\n    }\n    #sections.ytd-guide-renderer>*.ytd-guide-renderer:first-child {\n      padding: 0px !important;\n    }\n    #voice-search-button.ytd-masthead {\n      margin-left: 0 !important;\n      border: 1px solid red !important;\n      background: transparent !important;\n      backdrop-filter: var(--light-fl) !important;\n    }\n    #chips-wrapper.ytd-feed-filter-chip-bar-renderer {\n      display: none !important;\n    }\n    .yt-spec-touch-feedback-shape__fill {\n      background-color: black !important;\n    }\n    .yt-spec-icon-shape {\n      color: #c00 !important;\n    }\n    ytd-feed-filter-chip-bar-renderer {\n      height: 0 !important;\n    }\n    body.efyt-mini-player.efyt-mini-player-top-right #movie_player:not(.ytp-fullscreen) {\n      height: 315px !important;\n      border-radius: 14px !important;\n      width: 560px !important;\n      top: 55px !important;\n      left: ${position}px !important;\n      z-index: 100 !important;\n    }\n    body._top-right #efyt-close-mini-player {\n      top: 60px !important;\n      left: ${position}px !important;\n      width: 3% !important;\n      height: 3% !important;\n    }  \n    @media (prefers-color-scheme: dark) {\n      #start.ytd-masthead {\n        backdrop-filter: var(--dark-fl) !important;}\n        #start.ytd-masthead:hover {\n        backdrop-filter: var(--dark-fl-hover) !important;}\n      .ytSearchboxComponentInputBox {\n        backdrop-filter: var(--dark-fl) !important;}\n        .ytSearchboxComponentInputBox:hover {\n        backdrop-filter: var(--dark-fl-hover) !important;}\n      #container.ytd-searchbox {\n        backdrop-filter: var(--dark-fl) !important;}\n        #container.ytd-searchbox:hover {\n        backdrop-filter: var(--dark-fl-hover) !important;}\n      #end.ytd-masthead {\n        backdrop-filter: var(--dark-fl) !important;}\n        #end.ytd-masthead:hover {\n        backdrop-filter: var(--dark-fl-hover) !important;}\n      .ytSearchboxComponentSearchButton {\n        backdrop-filter: var(--dark-fl) !important;}\n        .ytSearchboxComponentSearchButton:hover {\n        backdrop-filter: var(--dark-fl-hover) !important;}\n      .yt-spec-button-shape-next--overlay.yt-spec-button-shape-next--text {\n        backdrop-filter: var(--dark-fl) !important;}\n        .yt-spec-button-shape-next--overlay.yt-spec-button-shape-next--text:hover {\n        backdrop-filter: var(--dark-fl-hover) !important;}\n      #voice-search-button.ytd-masthead {\n        backdrop-filter: var(--dark-fl) !important;}\n        #voice-search-button.ytd-masthead:hover {\n        backdrop-filter: var(--dark-fl-hover) !important;}\n    }\n  `;\n  styleElement.textContent = cssRules;\n}\n\nfunction adjustDynamicStyles() {\n  const masthead = document.querySelector('#masthead-container.ytd-app');\n  const center = document.querySelector('#center.ytd-masthead');\n\n  if (masthead && center) {\n    const windowWidth = window.innerWidth;\n    let mastheadWidth = 0;\n    if (windowWidth <= 658) {\n      mastheadWidth = 0;\n    } else if (windowWidth >= 1750) {\n      mastheadWidth = 100;\n    } else {\n      mastheadWidth = ((windowWidth - 658) / (1750 - 658)) * 100;\n    }\n    //masthead.style.width = `${mastheadWidth}%`;\n\n    let centerFlexBasis = 0;\n    if (windowWidth <= 658) {\n      centerFlexBasis = 200;\n    } else if (windowWidth >= 1750) {\n      centerFlexBasis = 550;\n    } else {\n      centerFlexBasis =\n        200 + ((windowWidth - 658) / (1750 - 658)) * (550 - 200);\n    }\n    center.style.flex = `0 0 ${centerFlexBasis}px`;\n  }\n}\n\nfunction waitForDOMElement(selector, callback, options = {}) {\n  const { interval = 100, timeout = 10000 } = options; // Destructure with defaults\n  if (checkIfShortsPage()) {\n    const startTime = Date.now();\n    const checkElement = () => {\n      const element = document.querySelector(selector);\n      if (element) {\n        callback(element);\n      } else if (Date.now() - startTime < timeout) {\n        setTimeout(checkElement, interval);\n      }\n    };\n    checkElement();\n  } else {\n    return;\n  }\n}\n\nfunction restartObserver() {\n  if (isRestartScheduled) {\n    return;\n  }\n  isRestartScheduled = true;\n  setTimeout(() => {\n    isRestartScheduled = false;\n    SkippingShorts();\n  }, 1000);\n}\n\nfunction SkippingShorts() {\n  if (checkIfShortsPage()) {\n    isClicked = false;\n    if (!hasNavigationButtonBeenFetched) {\n      waitForDOMElement(\n        '#navigation-button-down > ytd-button-renderer > yt-button-shape > button',\n        button => {\n          navigationButtonDown = button;\n          hasNavigationButtonBeenFetched = true;\n\n          navigationButtonDown.addEventListener(\n            'click',\n            function observerReinitHandler(e) {\n              if (!e.isTrusted) return;\n              navigationButtonDown.removeEventListener(\n                'click',\n                observerReinitHandler\n              );\n              if (observer) {\n                observer.disconnect();\n              }\n              restartObserver();\n            }\n          );\n        },\n        {\n          interval: 100,\n          timeout: 10000,\n        } // Pass options as an object\n      );\n    }\n\n    waitForDOMElement(\n      '#scrubber > desktop-shorts-player-controls > div > yt-progress-bar > div',\n      progressBarElement => {\n        if (observer) {\n          observer.disconnect();\n        }\n        let maxWidth = 0;\n\n        observer = new MutationObserver(mutations => {\n          mutations.forEach(mutation => {\n            if (\n              mutation.attributeName === 'aria-valuetext' &&\n              isSkippingEnabled\n            ) {\n              let ariaValueText =\n                progressBarElement.getAttribute('aria-valuetext');\n              let widthNumber = parseFloat(ariaValueText.replace('%', ''));\n              if (widthNumber >= maxWidth) {\n                maxWidth = widthNumber;\n              } else if (\n                maxWidth >= 95 &&\n                widthNumber < maxWidth - 10 &&\n                !isClicked\n              ) {\n                dispatchSpacebarEvent();\n                navigationButtonDown.click();\n                isClicked = true;\n                observer.disconnect();\n                restartObserver();\n                maxWidth = 0;\n              }\n            }\n          });\n        });\n\n        observer.observe(progressBarElement, {\n          attributes: true,\n          attributeFilter: ['aria-valuetext'],\n        });\n      },\n      100,\n      10000\n    );\n  }\n}\nfunction addToggleButton() {\n  if (checkIfShortsPage()) {\n    console.log('ToggleButton Fun in Working');\n    const windowHeight = window.innerHeight;\n    let buttonPosition = 0;\n    if (windowHeight <= 575) {\n      buttonPosition = 123;\n    } else if (windowHeight >= 900) {\n      buttonPosition = 310;\n    } else {\n      buttonPosition =\n        123 + ((windowHeight - 575) / (900 - 575)) * (310 - 1123);\n    }\n    let toggleButton = document.getElementById('shorts-skip-toggle');\n    if (!toggleButton) {\n      // Create styles only once\n      const toggleStyles = document.createElement('style');\n      toggleStyles.id = 'toggleStyles';\n      toggleStyles.textContent = `\n      .skip-toggle-btn {\n        position: relative;\n        pointer-events: all;\n        width: 100%;\n        height: 100%;\n        margin: none;\n        border-radius: 50%;\n        background-color: var(--light-bt);\n        cursor: pointer;\n        transition: background-color 0.2s ease;\n        z-index: 1000;\n        opacity: 1;\n        border: 1px solid red;\n        justify-content: center;\n        align-items: center;\n      }\n      .skip-toggle-btn:hover {\n        background-color: var(--light-bt-hover);\n      }\n      @media (prefers-color-scheme: dark) {\n        .skip-toggle-btn {\n          background-color: var(--dark-bt);\n        }\n        .skip-toggle-btn:hover {\n          background-color: var(--dark-bt-hover);\n        }\n      }\n      .toggle-icon {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        width: 100%;\n        color: #c02;\n        font-size: 13px;\n        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n          'Lucida Sans Unicode', Geneva, Verdana, serif;\n        font-weight: 600;\n        }\n      #navigation-button-up > ytd-button-renderer {\n        border: 1px solid red;\n        }\n      #navigation-button-down > ytd-button-renderer {\n        border: 1px solid red;\n        }\n      `;\n      document.head.appendChild(toggleStyles);\n      // Create the container div\n      const autoskipContainer = document.createElement('div');\n      autoskipContainer.id = 'shorts autoskip';\n      autoskipContainer.className = 'navigation-button style-scope ytd-shorts';\n      autoskipContainer.style.width = '58px';\n      autoskipContainer.style.height = '58px';\n\n      // Create the button\n      const toggleButton = document.createElement('button');\n      toggleButton.id = 'shorts-skip-toggle';\n      toggleButton.className = 'skip-toggle-btn';\n      toggleButton.title = 'Toggle Video Skipping (ON = Skip, OFF = No Skip)';\n\n      const icon = document.createElement('span');\n      icon.className = 'toggle-icon';\n      icon.textContent = 'SKIP';\n      toggleButton.appendChild(icon);\n\n      // Append button to container\n      autoskipContainer.appendChild(toggleButton);\n\n    waitForDOMElement(\n  '.navigation-container.style-scope.ytd-shorts',\n  (navigationContainer) => {\n    waitForDOMElement(\n      '#navigation-button-up',\n      (navigationButtonUp) => {\n        navigationContainer.insertBefore(autoskipContainer, navigationButtonUp);\n      },\n      { interval: 100, timeout: 10000 }\n    );\n  },\n  { interval: 100, timeout: 10000 }\n);\n\n      toggleButton.addEventListener('click', () => {\n        isSkippingEnabled = !isSkippingEnabled;\n        icon.textContent = isSkippingEnabled ? 'SKIP' : 'NO SKIP';\n\n        if (isSkippingEnabled) {\n          const progressBarElement = document.querySelector(\n            '#scrubber > desktop-shorts-player-controls > div > yt-progress-bar > div'\n          );\n\n          if (progressBarElement) {\n            observer.observe(progressBarElement, {\n              attributes: true,\n              attributeFilter: ['aria-valuetext'],\n            });\n          }\n        } else if (!isSkippingEnabled && observer) {\n          observer.disconnect();\n        }\n      });\n    }\n  }\n}\n\n// Small Helper Functions\nfunction checkIfWatchPage() {\n  return window.location.href.includes('youtube.com/watch');\n}\n\nfunction checkIfShortsPage() {\n  return window.location.href.includes('youtube.com/shorts');\n}\n\nfunction dispatchSpacebarEvent() {\n  const spacebarEvent = new KeyboardEvent('keydown', {\n    key: ' ',\n    code: 'Space',\n    keyCode: 32,\n    bubbles: true,\n    cancelable: true,\n  });\n  document.dispatchEvent(spacebarEvent);\n}\n\nfunction updateScrollToTopButtonVisibility() {\n  const scrollPosition =\n    window.pageYOffset || document.documentElement.scrollTop;\n  const scrollToTopBtn = document.getElementById('scroll-to-top');\n  if (scrollPosition > 1000 && checkIfWatchPage()) {\n    scrollToTopBtn.style.opacity = '1';\n  } else {\n    scrollToTopBtn.style.opacity = '0';\n  }\n}\nfunction removeToggleButton() {\n  const toggleButton = document.getElementById('shorts-skip-toggle');\n  if (toggleButton && toggleButton.parentNode) {\n    toggleButton.dispatchEvent(new Event('remove'));\n    toggleButton.parentNode.removeChild(toggleButton);\n  }\n  const toggleStyles = document.getElementById('toggleStyles');\n  if (toggleStyles && toggleStyles.parentNode) {\n    toggleStyles.parentNode.removeChild(toggleStyles);\n  }\n}\n\nfunction checkUrlChange() {\n  const currentUrl = window.location.href;\n  if (currentUrl !== lastUrl) {\n    lastUrl = currentUrl;\n    if (!currentUrl.includes('youtube.com/shorts')) {\n      removeToggleButton();\n      if (observer) {\n        observer.disconnect(); // Optional: Stop observer when leaving Shorts\n      }\n    } else {\n      console.log('The Shorts Script is working');\n      SkippingShorts();\n      addToggleButton();\n    }\n  }\n  setTimeout(checkUrlChange, 500);\n}\n\n// Event Listeners with Debouncing\nlet lastWheelEvent = 0;\nlet lastKeyEvent = 0;\nconst debounceDelay = 1000;\n\ndocument.addEventListener('wheel', function (event) {\n  const now = Date.now();\n  if (event.deltaY < 0 || event.deltaY > 0) {\n    lastWheelEvent = now;\n    if (observer) {\n      observer.disconnect();\n    }\n    restartObserver();\n  }\n});\n\ndocument.addEventListener('keydown', function (event) {\n  const now = Date.now();\n  if (event.keyCode === 38 || event.keyCode === 40) {\n    lastKeyEvent = now;\n    if (observer) {\n      observer.disconnect();\n    }\n    restartObserver();\n  }\n});\n\ndocument.getElementById('scroll-to-top').addEventListener('click', function () {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n\nwindow.addEventListener('popstate', updateScrollToTopButtonVisibility);\nwindow.addEventListener('popstate', addToggleButton);\nwindow.addEventListener('resize', adjustDynamicStyles);\nwindow.addEventListener('resize', updatePlayerPosition);\nwindow.addEventListener('resize', addToggleButton);\nwindow.addEventListener('scroll', updatePlayerPosition);\nwindow.addEventListener('scroll', updateScrollToTopButtonVisibility);\nwindow.addEventListener('DOMContentLoaded', checkUrlChange);\n\nupdatePlayerPosition();\nadjustDynamicStyles();\nupdateScrollToTopButtonVisibility();\ncheckUrlChange();\n",
    "customtheme": false,
    "darktheme": false,
    "date": 1648332255121,
    "defaultvolume": false,
    "disableautoplay": false,
    "executescript": true,
    "expanddescription": true,
    "filter": "none",
    "hidecardsendscreens": true,
    "hidechat": false,
    "hidecomments": false,
    "hiderelated": false,
    "hideshorts": false,
    "ignoreplaylists": true,
    "ignorepopupplayer": true,
    "localecode": "en_US",
    "localedir": "ltr",
    "miniplayer": true,
    "miniplayerposition": "top-right",
    "miniplayersize": "560x315",
    "newestcomments": false,
    "overridespeeds": false,
    "pauseforegroundtab": false,
    "pausevideos": true,
    "popuplayersize": "747x420",
    "previousversion": "3.0.5",
    "qualityembeds": "hd720",
    "qualityembedsfullscreen": "hd1080",
    "qualityplaylists": "hd720",
    "qualityplaylistsfullscreen": "hd1440",
    "qualityvideos": "hd1080",
    "qualityvideosfullscreen": "hd1440",
    "reload": false,
    "reversemousewheeldirection": false,
    "selectquality": true,
    "selectqualityfullscreenoff": true,
    "selectqualityfullscreenon": true,
    "speed": 1,
    "speedvariation": 0.1,
    "stopvideos": false,
    "theatermode": false,
    "theme": "default-dark",
    "themevariant": "dark-red.css",
    "update": 1740129345957,
    "vendorthemevariant": "youtube-deep-dark.css",
    "videofilters": {
      "blur": 0,
      "brightness": 100,
      "contrast": 100,
      "grayscale": 0,
      "inversion": 0,
      "rotation": 0,
      "saturation": 100,
      "sepia": 0
    },
    "volume": 100,
    "volumemultiplier": 2,
    "volumevariation": 5,
    "whatsnew": false,
    "wideplayer": true,
    "wideplayerviewport": false
  }
}
