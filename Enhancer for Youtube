{
  "version": "3.0.5",
  "settings": {
    "applyvideofilters": false,
    "backdropcolor": "#000000",
    "backdropopacity": 85,
    "blackbars": false,
    "blockautoplay": false,
    "blockhfrformats": false,
    "blockwebmformats": false,
    "boostvolume": false,
    "cinemamode": false,
    "cinemamodewideplayer": false,
    "controlbar": {
      "active": false,
      "autohide": false,
      "centered": true,
      "position": "fixed"
    },
    "controls": [],
    "controlsvisible": true,
    "controlspeed": false,
    "controlspeedmousebutton": false,
    "controlvolume": false,
    "controlvolumemousebutton": false,
    "convertshorts": false,
    "customcolors": {
      "--dimmer-text": "#cccccc",
      "--hover-background": "#232323",
      "--main-background": "#111111",
      "--main-color": "#00adee",
      "--main-text": "#eff0f1",
      "--second-background": "#181818",
      "--shadow": "#000000"
    },
    "customcss": "",
    "customscript": "var styleElement = document.createElement('style');\nlet buttonPosition;\nlet position;\nvar viewportWidth = window.innerWidth;\nlet observer = null;\nlet isClicked = false;\nconst scrollToTopBtn = document.createElement('button');\nconst svgElement = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'svg'\n);\nconst pathElement = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'path'\n);\nconst divElement = document.createElement('div');\nconst scrollTopBtnStyles = document.createElement('style');\n\n\nif (window.screen.width === 2560 && window.screen.height === 1440) {\n    buttonPosition = viewportWidth * 0.73;\n} else {\n    buttonPosition = viewportWidth * 0.7 - 30;\n}\n\nfunction updatePlayerPosition() {\n    var primaryElement = document.querySelector('#primary');\n    var columnsElement = document.querySelector('#columns');\n    var viewportWidth = window.innerWidth;\n\n    if (columnsElement && primaryElement) {\n        var maxWidthValue;\n        if (window.screen.width === 2560 && window.screen.height === 1440) {\n            maxWidthValue = 2300;\n            if (window.pageYOffset >= 4200) {\n                position = viewportWidth * 0.75 + 20;\n            } else {\n                position = viewportWidth * 0.55 - 30;\n            }\n        } else if (window.screen.width === 1920 && window.screen.height === 1080) {\n            maxWidthValue = 1850;\n            position = viewportWidth * 0.45 - 30;\n        } else {\n            console.log('Default resolution');\n            maxWidthValue = 1850;\n        }\n        primaryElement.style.maxWidth = maxWidthValue + 'px';\n        columnsElement.style.maxWidth = maxWidthValue + 'px';\n    }\n\n    var cssRules = `\n        #start.ytd-masthead {\n            height: 50px !important;\n            border-radius: 30px !important;\n            display: flex !important;\n            position: static !important;\n            margin: 0 10% !important;\n            border: 1px solid red !important;\n            backdrop-filter: brightness(0.6) !important;\n        }\n\n        .ytSearchboxComponentHost {\n            height: 53px !important;\n            margin: 0 12px 0 0 !important;\n        }\n\n        .ytSearchboxComponentInputBox  {\n            margin-left: 0 !important;\n            margin-top: 0 !important;\n            border: 1px solid red !important;\n            box-shadow: none !important;\n            height: 50px !important;\n            background: transparent !important;\n            backdrop-filter: brightness(0.6) !important;\n            display: flex !important;\n            justify-content: space-around !important;\n        }\n\n        #center.ytd-masthead {\n            margin: auto !important;\n        }\n\n        #container.ytd-searchbox {\n            margin-left: 0 !important;\n            border: 1px solid red !important;\n            box-shadow: none !important;\n            background: transparent !important;\n            backdrop-filter: brightness(0.6) !important;\n            display: flex !important;\n            justify-content: space-around !important;\n        }\n\n        #end.ytd-masthead {\n            height: 50px !important;\n            min-width: 10px !important;\n            border-radius: 30px !important;\n            position: relative !important;\n            margin: 0 10% !important;\n            border: 1px solid red !important;\n            backdrop-filter: brightness(0.6) !important;\n        }\n\n        #columns.ytd-watch-flexy {\n            margin-top: 0 !important;\n        }\n\n        ytd-watch-flexy[flexy] #secondary.ytd-watch-flexy {\n            min-width: 450px !important;\n        }\n\n        .ytSearchboxComponentSearchButton {\n            background: transparent !important;\n            border: 1px solid red !important;\n            backdrop-filter: brightness(0.6) !important;\n            height: 52px !important;\n        }\n\n        .yt-spec-button-shape-next--overlay.yt-spec-button-shape-next--text {\n            backdrop-filter: brightness(0.6) !important;\n            color: white !important;\n        }\n\n        #background.ytd-masthead {\n            position: fixed !important;\n            opacity: 0 !important;\n            visibility: visible !important;\n            --light-theme-text-color: invert !important;\n        }\n\n        #search-form.ytd-searchbox {\n            height: 50px !important;\n        }\n\n        ytd-searchbox.ytd-masthead {\n            margin: 0 !important;\n            padding: 0 10px !important;\n        }\n\n        #sections.ytd-guide-renderer {\n            position: relative !important;\n        }\n\n        #sections.ytd-guide-renderer>*.ytd-guide-renderer:first-child{\n            padding: 0px !important;\n        }\n\n        #voice-search-button.ytd-masthead {\n            margin-left:0 !important;\n            border: 1px solid red !important;\n            background: transparent !important;\n            backdrop-filter: brightness(0.6) !important;\n        }\n\n        #chips-wrapper.ytd-feed-filter-chip-bar-renderer {\n            display: none !important;\n        }\n\n        .yt-spec-touch-feedback-shape__fill {\n            background-color: black !important;\n        }\n\n        .yt-spec-icon-shape {\n            color: #c00 !important;\n        }\n\n        ytd-feed-filter-chip-bar-renderer {\n            height: 0 !important;\n        }\n\n        body.efyt-mini-player.efyt-mini-player-top-right #movie_player:not(.ytp-fullscreen) {\n            height: 315px !important;\n            border-radius: 14px !important;\n            width: 560px !important;\n            top: 55px !important;\n            left: ${position}px !important;\n            z-index: 100 !important;\n        }\n\n        body._top-right._560x315 #efyt-progress {\n            top: 360px !important;\n            border-bottom-right-radius: 860px;\n            border-bottom-left-radius: 860px;\n            left: ${position}px !important;\n            height: 10px !important;\n            max-width: 560px !important;\n            margin-left: 1.5px !important;\n            z-index: 200 !important;\n            overflow: hidden !important;\n        }\n\n        #efyt-progress::-webkit-progress-bar {\n            max-width: 560px !important;\n            overflow: hidden !important;\n            border-bottom-left-radius: 860px;\n            border-bottom-right-radius: 860px;\n        }\n         #efyt-progress::-webkit-progress-value {\n            border-top-right-radius: 860px;\n            border-bottom-right-radius: 860px;\n        }\n\n        body._top-right #efyt-close-mini-player {\n           top: 60px !important;\n            left: ${position}px !important;\n            width: 3% !important;\n            height: 3% !important;\n        }\n    `;\n    styleElement.textContent = cssRules;\n}\n\nfunction adjustDynamicStyles() {\n    const masthead = document.querySelector('#masthead-container.ytd-app');\n    const center = document.querySelector('#center.ytd-masthead');\n\n    if (masthead && center) {\n        const windowWidth = window.innerWidth;\n\n        // Calculate masthead width\n        let mastheadWidth = 0;\n        if (windowWidth <= 658) {\n            mastheadWidth = 0; // Minimum width for masthead\n        } else if (windowWidth >= 1750) {\n            mastheadWidth = 100; // Maximum width for masthead\n        } else {\n            mastheadWidth = ((windowWidth - 658) / (1750 - 658)) * 100; // Interpolated width\n        }\n        masthead.style.width = `${mastheadWidth}%`;\n\n        // Calculate center flex-basis\n        let centerFlexBasis = 0;\n        if (windowWidth <= 658) {\n            centerFlexBasis = 200; // Minimum flex-basis for center\n        } else if (windowWidth >= 1750) {\n            centerFlexBasis = 550; // Maximum flex-basis for center\n        } else {\n            centerFlexBasis =\n                200 + ((windowWidth - 658) / (1750 - 658)) * (550 - 200); // Interpolated flex-basis\n        }\n        center.style.flex = `0 0 ${centerFlexBasis}px`; // Apply calculated flex-basis\n    }\n}\n\nfunction waitForDOMElement(selector, callback, interval = 100, timeout = 10000) {\n    const startTime = Date.now();\n    const checkElement = () => {\n        const element = document.querySelector(selector);\n        if (element) {\n            callback(element);\n        } else if (Date.now() - startTime < timeout) {\n            setTimeout(checkElement, interval);\n        } else {\n            console.error(`Element with selector \"${selector}\" not found within ${timeout}ms.`);\n        }\n    };\n    checkElement();\n}\n\n\nfunction setupObserverForShort() {\n    isClicked = false;\n    waitForDOMElement(\"#scrubber > desktop-shorts-player-controls > div > yt-progress-bar > div\", progressBarElement => {\n        waitForDOMElement(\"#navigation-button-down > ytd-button-renderer > yt-button-shape > button\", navigationButtonDown => {\n            if (observer) {\n                observer.disconnect();\n            }\n            observer = new MutationObserver(mutations => {\n                mutations.forEach(mutation => {\n                    if (mutation.attributeName === 'aria-valuetext') {\n                        let ariaValueText = progressBarElement.getAttribute('aria-valuetext');\n                        let widthNumber = parseFloat(ariaValueText.replace('%', ''));\n                        if (widthNumber >= 99 && !isClicked) {\n                            navigationButtonDown.click();\n                            isClicked = true;\n                            setTimeout(setupObserverForShort, 1000);\n                        }\n                    }\n                });\n            });\n            observer.observe(progressBarElement, {\n                attributes: true,\n                attributeFilter: ['aria-valuetext']\n            });\n         navigationButtonDown.addEventListener('click', function observerReinitHandler() {\n        setTimeout(setupObserverForShort, 1000); \n        navigationButtonDown.removeEventListener('click', observerReinitHandler); \n      });\n        }, 100, 10000);\n    }, 100, 10000);\n}\n\n\nfunction checkIfWatchPage() {\n    return window.location.href.includes('youtube.com/watch');\n}\n\nfunction toggleScrollToTopButton() {\n    const scrollToTopBtn = document.getElementById('scroll-to-top');\n    scrollToTopBtn.style.opacity = checkIfWatchPage() ? '1' : '0';\n}\n\n\nscrollToTopBtn.id = 'scroll-to-top';\nscrollToTopBtn.classList.add('scroll-top-btn');\nscrollToTopBtn.setAttribute('aria-label', 'Scroll to Top');\n\n\nsvgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\nsvgElement.setAttribute('height', '24');\nsvgElement.setAttribute('viewBox', '0 0 24 24');\nsvgElement.setAttribute('width', '24');\nsvgElement.setAttribute('focusable', 'false');\nsvgElement.style.fill = 'red';\nsvgElement.style.display = 'flex';\n\n\npathElement.setAttribute(\n    'd',\n    'M19.884 10.114a1.25 1.25 0 01-1.768 1.768L13.25 7.016v12.982a1.25 1.25 0 11-2.5 0V7.016l-4.866 4.866a1.25 1.25 0 11-1.768-1.768L12 2.23l7.884 7.884Z'\n);\n\nsvgElement.appendChild(pathElement);\n\n\ndivElement.classList.add('scroll-up-btn');\ndivElement.appendChild(svgElement);\n\nscrollToTopBtn.appendChild(divElement);\n\n\nscrollTopBtnStyles.textContent = `\n    :root {\n        --dark-bg: rgba(100,100,100, 0.5); /* 50% dark circle for light theme */\n        --dark-bg-hover: rgba(150, 150, 150, 0.5); /* 80% dark circle for light theme hover */\n        --light-bg: rgba(200, 200, 200, 0.5); /* 50% light circle for dark theme */\n        --light-bg-hover: rgba(150, 150, 150, 0.5); /* 80% light circle for dark theme hover */\n    }\n\n    /* Light theme */\n    .scroll-top-btn {\n        position: fixed;\n        opacity: 0;\n        bottom: 20px;\n        left: ${buttonPosition}px;\n        width: 55px;\n        height: 55px;\n        border: 1px solid red;\n        padding: 0;\n        border-radius: 50%;\n        background-color: var(--light-bg);\n        cursor: pointer;\n        transition: background-color 0.2s ease;\n    }\n    .scroll-top-btn:hover {\n        background-color: var(--light-bg-hover);\n    }\n    /* Dark theme */\n    @media (prefers-color-scheme: dark) {\n        .scroll-top-btn {\n            background-color: var(--dark-bg);\n        }\n        .scroll-top-btn:hover {\n            background-color: var(--dark-bg-hover);\n        }\n    }\n    .scroll-up-btn {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%; /* Adjust as necessary */\n        width: 100%;  /* Adjust as necessary */\n    }\n`;\n\ndocument.head.appendChild(styleElement);\ndocument.head.appendChild(scrollTopBtnStyles);\ndocument.body.appendChild(scrollToTopBtn);\nupdatePlayerPosition();\nsetupObserverForShort();\n\n\nwindow.addEventListener('resize', adjustDynamicStyles);\nwindow.addEventListener('resize', updatePlayerPosition);\nwindow.addEventListener('scroll', updatePlayerPosition);\nwindow.addEventListener('scroll', () => {\n    const scrollPosition =\n        window.pageYOffset || document.documentElement.scrollTop;\n    const scrollToTopBtn = document.getElementById('scroll-to-top');\n\n    if (scrollPosition > 1000 && checkIfWatchPage()) {\n        scrollToTopBtn.classList.add('show');\n        scrollToTopBtn.style.opacity = 1;\n    } else {\n        scrollToTopBtn.classList.remove('show');\n        scrollToTopBtn.style.opacity = 0;\n    }\n});\ndocument.getElementById('scroll-to-top').addEventListener('click', function () {\n    window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n    });\n});\ndocument.addEventListener('DOMContentLoaded', adjustDynamicStyles);\ndocument.addEventListener('DOMContentLoaded', toggleScrollToTopButton);\ndocument.addEventListener('DOMContentLoaded', setupObserverForShort);\nwindow.addEventListener('popstate', toggleScrollToTopButton);",
    "customtheme": false,
    "darktheme": false,
    "date": 1648332255121,
    "defaultvolume": false,
    "disableautoplay": false,
    "executescript": true,
    "expanddescription": true,
    "filter": "none",
    "hidecardsendscreens": true,
    "hidechat": false,
    "hidecomments": false,
    "hiderelated": false,
    "hideshorts": false,
    "ignoreplaylists": true,
    "ignorepopupplayer": true,
    "localecode": "en_US",
    "localedir": "ltr",
    "miniplayer": true,
    "miniplayerposition": "top-right",
    "miniplayersize": "560x315",
    "newestcomments": false,
    "overridespeeds": false,
    "pauseforegroundtab": false,
    "pausevideos": true,
    "popuplayersize": "747x420",
    "previousversion": "3.0.3",
    "qualityembeds": "hd720",
    "qualityembedsfullscreen": "hd1080",
    "qualityplaylists": "hd720",
    "qualityplaylistsfullscreen": "hd1440",
    "qualityvideos": "hd1080",
    "qualityvideosfullscreen": "hd1440",
    "reload": false,
    "reversemousewheeldirection": false,
    "selectquality": true,
    "selectqualityfullscreenoff": true,
    "selectqualityfullscreenon": true,
    "speed": 1,
    "speedvariation": 0.1,
    "stopvideos": false,
    "theatermode": false,
    "theme": "default-dark",
    "themevariant": "dark-red.css",
    "update": 1733993835326,
    "vendorthemevariant": "youtube-deep-dark.css",
    "videofilters": {
      "blur": 0,
      "brightness": 100,
      "contrast": 100,
      "grayscale": 0,
      "inversion": 0,
      "rotation": 0,
      "saturation": 100,
      "sepia": 0
    },
    "volume": 100,
    "volumemultiplier": 2,
    "volumevariation": 5,
    "whatsnew": false,
    "wideplayer": true,
    "wideplayerviewport": false
  }
}
