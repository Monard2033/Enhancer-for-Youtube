{
  "version": "3.0.6",
  "settings": {
    "applyvideofilters": false,
    "backdropcolor": "#000000",
    "backdropopacity": 85,
    "blackbars": false,
    "blockautoplay": false,
    "blockhfrformats": false,
    "blockwebmformats": false,
    "boostvolume": false,
    "cinemamode": false,
    "cinemamodewideplayer": false,
    "controlbar": {
      "active": false,
      "autohide": false,
      "centered": true,
      "position": "fixed"
    },
    "controls": [],
    "controlsvisible": false,
    "controlspeed": false,
    "controlspeedmousebutton": false,
    "controlvolume": false,
    "controlvolumemousebutton": false,
    "convertshorts": false,
    "customcolors": {
      "--dimmer-text": "#cccccc",
      "--hover-background": "#232323",
      "--main-background": "#111111",
      "--main-color": "#00adee",
      "--main-text": "#eff0f1",
      "--second-background": "#181818",
      "--shadow": "#000000"
    },
    "customcss": "",
    "customscript": "(function () {\n// Global variables for state tracking\nlet isClicked = true;\nlet isSkippingEnabled = true;\nlet hasNavigationButtonBeenFetched = false;\nlet navigationButtonDown = null;\nlet lastUrl = null;\nlet observer = null;\nlet isRestartScheduled = false;\n\n// Throttle utility\nfunction throttle(fn, delay) {\nlet lastCall = 0;\nreturn (...args) => {\nconst now = Date.now();\nif (now - lastCall >= delay) {\nlastCall = now;\nfn(...args);\n}\n};\n}\n// Inject global styles once\nconst styleElement = document.createElement('style');\ndocument.head.appendChild(styleElement);\nstyleElement.textContent = `\n:root {\n--dark-bt: rgb(200 200 200 / 15%);\n--dark-bt-hover: rgba(255 255 255 /25%);\n--dark-bt-tp: rgb(200 200 200 / 0%);\n--light-bt: rgb(0 0 0 / 7%);\n--light-bt-hover: rgb(0 0 0 /15%);\n}\n\n#start.ytd-masthead {\nheight: 50px;\nborder-radius: 30px;\ndisplay: flex;\nposition: static;\nmargin: 0 10%;\nborder: 1px dotted red;\nbackground-color: var(--light-bt);\n}\n\n.ytSearchboxComponentHost {\nheight: 53px;\nmargin: 0 12px 0 0;\n}\n\n.ytSearchboxComponentInputBox {\nmargin-left: 0;\nmargin-top: 0;\nborder: 1px dotted red;\nbox-shadow: none;\nheight: 50px;\nbackground: transparent;\nbackground-color: var(--light-bt);\ndisplay: flex;\njustify-content: space-around;\n}\n\n#center.ytd-masthead {\nmargin: auto;\n}\n\n#container.ytd-masthead {\nmargin-left: 0;\nbox-shadow: none;\nbackground: transparent;\ndisplay: flex;\nopacity: 0;\nz-index: 1000;\njustify-content: space-around;\n}\n\n#end.ytd-masthead {\nheight: 50px;\nmin-width: 10px;\nborder-radius: 30px;\nposition: relative;\nmargin: 0 10%;\nborder: 1px dotted red;\nbackground-color: var(--light-bt);\n}\n\nytd-watch-flexy[flexy] #secondary.ytd-watch-flexy {\nmin-width: 450px;\npadding-right: 0px;\n}\n\n.ytSearchboxComponentSearchButton {\nbackground: transparent;\nborder: 1px dotted red;\nbackground-color: var(--light-bt);\nheight: 52px;\n}\n\n#background.ytd-masthead {\nposition: fixed;\nopacity: 0;\nvisibility: visible;\n}\n\n#search-form.ytd-searchbox {\nheight: 50px;\n}\n\nytd-searchbox.ytd-masthead {\nmargin: 0;\npadding: 0 10px;\n}\n\n#sections.ytd-guide-renderer {\nposition: relative;\n}\n\n#sections.ytd-guide-renderer>*.ytd-guide-renderer:first-child {\npadding: 0px;\n}\n\n#voice-search-button.ytd-masthead {\nmargin-left: 0;\nbackground: transparent;\n}\n\n#chips-wrapper.ytd-feed-filter-chip-bar-renderer {\ndisplay: none;\n}\n\n.yt-spec-icon-shape {\ncolor: #c00;\n}\n\nytd-feed-filter-chip-bar-renderer {\nheight: 0;\n}\n\n#frosted-glass.with-chipbar.ytd-app {\ndisplay: none;\n}\n\n.yt-core-attributed-string--white-space-no-wrap {\ncolor: #c00 !important;\n}\n\n.yt-spec-touch-feedback-shape {\nborder: 1px dotted red;\nbackground-color: var(--light-bt) !important;\n}\n\n.yt-spec-touch-feedback-shape:hover {\nbackground-color: var(--light-bt-hover) !important;\n}\n\n@media (prefers-color-scheme: dark) {\n\n#start.ytd-masthead,\n.ytSearchboxComponentInputBox,\n#container.ytd-searchbox,\n#end.ytd-masthead,\n.scroll-top-btn,\n.skip-toggle-btn,\n.ytSearchboxComponentSearchButton,\n.yt-spec-touch-feedback-shape,\n.yt-spec-button-shape-next--overlay.yt-spec-button-shape-next--text,\n#voice-search-button.ytd-masthead {\nbackground-color: var(--dark-bt) !important;\n}\n\n#content > yt-lockup-view-model > div > yt-touch-feedback-shape > div {\nbackground-color: var(--dark-bt-tp) !important;\nborder: none !important;\n}\n#contents > yt-lockup-view-model:nth-child(n) > div > yt-touch-feedback-shape > div {\nbackground-color: var(--dark-bt-tp) !important;\nborder: none !important;\n}\n\n#start.ytd-masthead:hover,\n.ytSearchboxComponentInputBox:hover,\n#container.ytd-searchbox:hover,\n#end.ytd-masthead:hover,\n.scroll-top-btn:hover,\n.skip-toggle-btn:hover,\n.ytSearchboxComponentSearchButton:hover,\n.yt-spec-touch-feedback-shape:hover,\n.yt-spec-button-shape-next--overlay.yt-spec-button-shape-next--text:hover,\n#voice-search-button.ytd-masthead:hover {\nbackground-color: var(--dark-bt-hover) !important;\n}\n}\n\n#scroll-top-container {\nposition: fixed;\nbottom: 20px;\nwidth: 55px;\nheight: 55px;\ntransition: opacity 0.3s ease;\nz-index: 1000;\nopacity: 0;\n}\n\n.scroll-top-btn {\npointer-events: all;\nwidth: 100%;\nheight: 100%;\nborder-radius: 50%;\ncursor: pointer;\nborder: 1px dotted red;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: var(--light-bt);\n}\n\n.scroll-top-btn:hover {\nbackground-color: var(--light-bt-hover);\n}\n\n.scroll-up-btn {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100%;\nwidth: 100%;\n}\n\n.skip-toggle-btn {\npointer-events: all;\nwidth: 56px;\nheight: 56px;\nmargin: 0;\nborder-radius: 50%;\nbackground-color: var(--light-bt);\ncursor: pointer;\ntransition: background-color 0.2s ease, opacity 4s ease;\nz-index: 1000;\nopacity: 1;\nborder: 1px dotted red;\njustify-content: center;\nalign-items: center;\n}\n\n.skip-toggle-btn:hover {\nbackground-color: var(--light-bt-hover);\n}\n\n.toggle-icon {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100%;\nwidth: 100%;\ncolor: #c00;\nfont-size: 13px;\nfont-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\nfont-weight: 600;\n}\n\n.skip-tooltip {\ndisplay: flex;\nposition: absolute;\nleft: -150px;\ntop: 0;\nheight: 25px;\ntransform: translateY(8px);\nbackground-color: #707070;\ncolor: #ffffff;\npadding: 6px 8px;\nborder-radius: 4px;\nfont-family: \"Roboto\", \"Arial\", sans-serif;\nfont-size: 1.2rem;\nline-height: 1.8rem;\nfont-weight: 400;\nalign-items: center;\nz-index: 1001;\nopacity: 0;\nvisibility: hidden;\ntransition: opacity 0.2s ease-in-out;\n}\n\n.skip-toggle-btn:hover+.skip-tooltip,\n.skip-tooltip:hover {\nopacity: 1;\nvisibility: visible;\n}\n`;\n// Create and position the scroll-to-top button\nfunction createScrollToTopBtn() {\nlet scrollTopContainer = document.getElementById('scroll-top-container');\nif (!scrollTopContainer) {\nscrollTopContainer = document.createElement('div');\nscrollTopContainer.id = 'scroll-top-container';\nscrollTopContainer.className =\n'navigation-button style-scope ytd-watch-flexy';\nconst scrollToTopBtn = document.createElement('button');\nscrollToTopBtn.id = 'scroll-to-top';\nscrollToTopBtn.className = 'scroll-top-btn';\nscrollToTopBtn.setAttribute('aria-label', 'Scroll to Top');\n\nconst svgElement = document.createElementNS(\n'http://www.w3.org/2000/svg',\n'svg'\n);\nconst pathElement = document.createElementNS(\n'http://www.w3.org/2000/svg',\n'path'\n);\nconst divElement = document.createElement('div');\n\nsvgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\nsvgElement.setAttribute('height', '24');\nsvgElement.setAttribute('viewBox', '0 0 24 24');\nsvgElement.setAttribute('width', '24');\nsvgElement.setAttribute('focusable', 'false');\nsvgElement.style.fill = 'red';\nsvgElement.style.display = 'flex';\n\npathElement.setAttribute(\n'd',\n'M19.884 10.114a1.25 1.25 0 01-1.768 1.768L13.25 7.016v12.982a1.25 1.25 0 11-2.5 0V7.016l-4.866 4.866a1.25 1.25 0 11-1.768-1.768L12 2.23l7.884 7.884Z'\n);\n\nsvgElement.appendChild(pathElement);\ndivElement.classList.add('scroll-up-btn');\ndivElement.appendChild(svgElement);\nscrollToTopBtn.appendChild(divElement);\nscrollTopContainer.appendChild(scrollToTopBtn);\ndocument.body.appendChild(scrollTopContainer);\n\n// Position the button\nconst updatePosition = () => {\nconst viewportWidth = window.innerWidth;\nlet buttonPosition;\nif (window.screen.width === 2560 && window.screen.height === 1440) {\nbuttonPosition = 0.904 * (viewportWidth - 1035) + 544;\n} else {\nbuttonPosition = 0.904 * (viewportWidth - 1035) + 544;\n}\nbuttonPosition = Math.max(544, Math.min(1344, buttonPosition));\nscrollTopContainer.style.left = `${buttonPosition}px`;\n};\nupdatePosition();\n\n// Add click event listener\nscrollToTopBtn.addEventListener('click', () => {\nwindow.scrollTo({\ntop: 0,\nbehavior: 'smooth',\n});\n});\n\n// Update position on resize\nwindow.addEventListener('resize', throttle(updatePosition, 30));\n}\n\n// Handle scroll visibility\nconst handleScrollVisibility = () => {\nconst scrollPosition = window.pageYOffset || document.documentElement.scrollTop;\nscrollTopContainer.style.opacity = (scrollPosition > 1000 && checkIfWatchPage()) ? '1' : '0';\n};\n\n// Add scroll event listener (only once)\nwindow.removeEventListener('scroll', handleScrollVisibility); // Prevent duplicates\nwindow.addEventListener('scroll', handleScrollVisibility);\n\n// Initial visibility check\nhandleScrollVisibility();\n}\n\n// Toggle button for YouTube Shorts\nfunction createShortsSkipBtn() {\nif (checkIfShortsPage()) {\nlet toggleButton = document.getElementById('shorts-skip-toggle');\nif (!toggleButton) {\nconst autoskipContainer = document.createElement('div');\nautoskipContainer.className =\n'navigation-button style-scope ytd-shorts';\nautoskipContainer.id = 'shorts-autoskip';\n\ntoggleButton = document.createElement('button');\ntoggleButton.id = 'shorts-skip-toggle';\ntoggleButton.className = 'skip-toggle-btn';\n\n// Create the touch feedback shape div\nconst touchFeedbackShape = document.createElement('div');\ntouchFeedbackShape.className = 'yt-spec-touch-feedback-shape';\ntoggleButton.appendChild(touchFeedbackShape);\n\nconst icon = document.createElement('span');\nicon.className = 'toggle-icon';\nicon.textContent = 'SKIP';\ntoggleButton.appendChild(icon);\n\n// Create the tooltip\nconst tooltip = document.createElement('div');\ntooltip.className = 'skip-tooltip';\ntooltip.textContent = 'Toggle Video Skipping';\ntooltip.setAttribute('role', 'tooltip');\ntooltip.setAttribute('aria-label', 'Toggle Video Skipping');\n\n// Append button and tooltip to container\nautoskipContainer.appendChild(toggleButton);\nautoskipContainer.appendChild(tooltip);\n\nwaitForDOMElement(\n'.navigation-container.style-scope.ytd-shorts',\nnavigationContainer => {\nwaitForDOMElement(\n'#navigation-button-up',\nnavigationButtonUp => {\nnavigationContainer.insertBefore(\nautoskipContainer,\nnavigationButtonUp\n);\n},\n{\ninterval: 100,\ntimeout: 10000,\n}\n);\n},\n{\ninterval: 100,\ntimeout: 10000,\n}\n);\n\ntoggleButton.addEventListener('click', () => {\nisSkippingEnabled = !isSkippingEnabled;\nicon.textContent = isSkippingEnabled ? 'SKIP' : 'NO SKIP';\n\nif (isSkippingEnabled) {\nconst progressBarElement = document.querySelector(\n'#scrubber > desktop-shorts-player-controls > div > yt-progress-bar > div'\n);\nif (progressBarElement && observer) {\nobserver.observe(progressBarElement, {\nattributes: true,\nattributeFilter: ['aria-valuetext'],\n});\n}\n} else if (!isSkippingEnabled && observer) {\nobserver.disconnect();\n}\n});\n}\n}\n}\n\n// Combined layout update\nfunction updateLayout() {\nconst masthead = document.querySelector('#masthead-container.ytd-app');\nconst center = document.querySelector('#center.ytd-masthead');\nconst container = document.querySelector('#container.ytd-masthead');\nconst primaryElement = document.querySelector('#primary');\nconst columnsElement = document.querySelector('#columns');\n\nif (masthead && center && container) {\nconst windowWidth = window.innerWidth;\ncontainer.style.opacity = window.scrollY !== 0 ? '0.6' : '1';\nlet centerFlexBasis = 200 + (windowWidth - 1035) * 0.3955;\ncenterFlexBasis = Math.max(200, Math.min(550, centerFlexBasis));\ncenter.style.flex = `0 0 ${centerFlexBasis}px`;\n}\n\n\nif (primaryElement && columnsElement) {\nconst viewportWidth = window.innerWidth;\nlet maxWidthValue, position;\nif (window.screen.width === 2560 && window.screen.height === 1440) {\nmaxWidthValue = 2300;\nposition =\nwindow.pageYOffset >= 4200\n? viewportWidth * 0.75 + 20\n: viewportWidth * 0.55 - 30;\n} else {\nmaxWidthValue = 1850;\nposition = 0.8633 * (viewportWidth - 1035) + 80;\nposition = Math.max(80, Math.min(854, position));\n}\n\nconst cssRules = `\n#primary.ytd-watch-flexy {\nmax-width: ${maxWidthValue}px !important;\nmargin-left: 0px !important;\nmargin-top: 12px !important;\n}\n#columns.ytd-watch-flexy {\nmax-width: ${maxWidthValue}px !important;\n}\nbody.efyt-mini-player.efyt-mini-player-top-right #movie_player:not(.ytp-fullscreen) {\nheight: 315px !important;\nborder-radius: 14px !important;\ntop: 55px !important;\nleft: ${position}px !important;\n}\nbody._top-right #efyt-close-mini-player {\ntop: 60px !important;\nleft: ${position}px !important;\nwidth: 3%;\nheight: 3%;\n}\n`;\nlet pageStyles = document.querySelector('style[data-page-styles]');\nif (!pageStyles) {\npageStyles = document.createElement('style');\npageStyles.setAttribute('data-page-styles', 'true');\ndocument.head.appendChild(pageStyles);\n}\npageStyles.textContent = cssRules;\n}\n}\n// Original waitForDOMElement\nfunction waitForDOMElement(selector, callback, options = {}) {\nconst { interval = 100, timeout = 10000 } = options;\nif (checkIfShortsPage()) {\nconst startTime = Date.now();\nconst checkElement = () => {\nconst element = document.querySelector(selector);\nif (element) {\ncallback(element);\n} else if (Date.now() - startTime < timeout) {\nsetTimeout(checkElement, interval);\n}\n};\ncheckElement();\n}\n}\n// Restart observer\nfunction restartObserver() {\nif (isRestartScheduled) return;\nisRestartScheduled = true;\nsetTimeout(() => {\nisRestartScheduled = false;\nSkippingShortsMechanism();\n}, 1000);\n}\n\n// Handle skipping shorts\nfunction SkippingShortsMechanism() {\nif (checkIfShortsPage()) {\nisClicked = false;\nif (!hasNavigationButtonBeenFetched) {\nwaitForDOMElement(\n'#navigation-button-down > ytd-button-renderer > yt-button-shape > button',\nbutton => {\nnavigationButtonDown = button;\nhasNavigationButtonBeenFetched = true;\n\nnavigationButtonDown.addEventListener(\n'click',\nfunction observerReinitHandler(e) {\nif (!e.isTrusted) return;\nnavigationButtonDown.removeEventListener(\n'click',\nobserverReinitHandler\n);\nif (observer) {\nobserver.disconnect();\n}\nrestartObserver();\n}\n);\n},\n{\ninterval: 100,\ntimeout: 10000,\n}\n);\n}\nwaitForDOMElement(\n'#scrubber > desktop-shorts-player-controls > div > yt-progress-bar > div',\nprogressBarElement => {\nif (observer) {\nobserver.disconnect();\n}\nlet maxWidth = 0;\n\nobserver = new MutationObserver(mutations => {\nmutations.forEach(mutation => {\nif (\nmutation.attributeName === 'aria-valuetext' &&\nisSkippingEnabled\n) {\nlet ariaValueText =\nprogressBarElement.getAttribute('aria-valuetext');\nlet widthNumber = parseFloat(ariaValueText.replace('%', ''));\nif (widthNumber >= maxWidth) {\nmaxWidth = widthNumber;\npreviousWidth = widthNumber;\n} else if (!isClicked) {\nif (\n(widthNumber === 0 || widthNumber === 1) &&\npreviousWidth >= 97\n) {\npauseVideo();\nnavigationButtonDown.click();\nisClicked = true;\nobserver.disconnect();\nrestartObserver();\nmaxWidth = 0;\npreviousWidth = 0;\n} else {\npreviousWidth = widthNumber;\n}\n}\n}\n});\n});\nobserver.observe(progressBarElement, {\nattributes: true,\nattributeFilter: ['aria-valuetext'],\n});\n},\n{\ninterval: 100,\ntimeout: 10000,\n}\n);\n}\n}\n\n// Helper functions\nfunction checkIfWatchPage() {\nreturn window.location.href.includes('youtube.com/watch');\n}\n\nfunction checkIfShortsPage() {\nreturn window.location.href.includes('youtube.com/shorts');\n}\n\n// Function to pause the video directly\nfunction pauseVideo() {\nconst videoElement = document.querySelector('video'); // Find the video element\nif (videoElement && !videoElement.paused) {\nvideoElement.pause();\n}\n}\n\nfunction removeToggleButton() {\nconst toggleButton = document.getElementById('shorts-skip-toggle');\nif (toggleButton && toggleButton.parentNode) {\ntoggleButton.dispatchEvent(new Event('remove'));\ntoggleButton.parentNode.removeChild(toggleButton);\n}\n}\n\n// Original URL change detection\nfunction checkUrlChange() {\nconst currentUrl = window.location.href;\nif (currentUrl !== lastUrl) {\nlastUrl = currentUrl;\nif (!currentUrl.includes('youtube.com/shorts')) {\nremoveToggleButton();\nif (observer) {\nobserver.disconnect();\n}\n} else {\nSkippingShortsMechanism();\ncreateShortsSkipBtn();\n}\n}\nsetTimeout(checkUrlChange, 500);\n}\n// Event listeners with debouncing\nlet lastWheelEvent = 0;\nlet lastKeyEvent = 0;\nconst debounceDelay = 1000;\n\ndocument.addEventListener('wheel', function (event) {\nconst now = Date.now();\nif (event.deltaY !== 0 && now - lastWheelEvent > debounceDelay) {\nlastWheelEvent = now;\nif (observer) {\nobserver.disconnect();\n}\nrestartObserver();\n}\n});\n\ndocument.addEventListener('keydown', function (event) {\nconst now = Date.now();\nif (\n(event.keyCode === 38 || event.keyCode === 40) &&\nnow - lastKeyEvent > debounceDelay\n) {\nlastKeyEvent = now;\nif (observer) {\nobserver.disconnect();\n}\nrestartObserver();\n}\n});\n\nwindow.addEventListener('scroll', () => {\nupdateLayout();\ncreateScrollToTopBtn();\n});\n\nwindow.addEventListener(\n'resize',\nthrottle(() => {\nupdateLayout();\ncreateScrollToTopBtn();\n}, 30)\n);\n\nwindow.addEventListener('load', () => {\nupdateLayout();\ncreateScrollToTopBtn();\n});\n\nwindow.addEventListener('popstate', () => {\nupdateLayout();\ncreateScrollToTopBtn();\n});\n\nwindow.addEventListener('DOMContentLoaded', () => {\ncheckUrlChange();\ncreateScrollToTopBtn();\n});\n\nupdateLayout();\ncreateScrollToTopBtn();\n})();",
    "customtheme": false,
    "darktheme": false,
    "date": 1648332255121,
    "defaultvolume": false,
    "disableautoplay": false,
    "executescript": true,
    "expanddescription": true,
    "filter": "none",
    "hidecardsendscreens": true,
    "hidechat": false,
    "hidecomments": false,
    "hiderelated": false,
    "hideshorts": false,
    "ignoreplaylists": true,
    "ignorepopupplayer": true,
    "localecode": "en_US",
    "localedir": "ltr",
    "miniplayer": true,
    "miniplayerposition": "top-right",
    "miniplayersize": "560x315",
    "newestcomments": true,
    "overridespeeds": false,
    "pauseforegroundtab": false,
    "pausevideos": true,
    "popuplayersize": "747x420",
    "previousversion": "3.0.5",
    "qualityembeds": "hd720",
    "qualityembedsfullscreen": "hd1080",
    "qualityplaylists": "hd720",
    "qualityplaylistsfullscreen": "hd1440",
    "qualityvideos": "hd1080",
    "qualityvideosfullscreen": "hd1440",
    "reload": false,
    "reversemousewheeldirection": false,
    "selectquality": true,
    "selectqualityfullscreenoff": true,
    "selectqualityfullscreenon": true,
    "speed": 1,
    "speedvariation": 0.1,
    "stopvideos": false,
    "theatermode": false,
    "theme": "default-dark",
    "themevariant": "dark-red.css",
    "update": 1740129345957,
    "vendorthemevariant": "youtube-deep-dark.css",
    "videofilters": {
      "blur": 0,
      "brightness": 100,
      "contrast": 100,
      "grayscale": 0,
      "inversion": 0,
      "rotation": 0,
      "saturation": 100,
      "sepia": 0
    },
    "volume": 100,
    "volumemultiplier": 2,
    "volumevariation": 5,
    "whatsnew": false,
    "wideplayer": true,
    "wideplayerviewport": false
  }
}
